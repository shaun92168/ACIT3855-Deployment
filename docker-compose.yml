version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: acit3855-shaun.westus2.cloudapp.azure.com # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://acit3855-shaun.westus2.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'shaun'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'shaun'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'shaun'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - "3306:3306"
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
  event_receiver:
    image: event-receiver
    ports: 
      - "8080:8080"
    hostname: event_receiver
    depends_on:
      - "kafka"
    volumes:
      - ../ACIT3855-EventReceiver:/var/acit3855/eventreceiver
  data_store:
    image: data-store
    ports: 
      - "8090:8090"
    hostname: data_store
    depends_on:
      - "kafka"
      - "db"
    volumes:
      - ../ACIT3855-DataStore:/var/acit3855/datastore
  processor:
    image: processor
    ports: 
      - "8100:8100"
    hostname: processor
    depends_on:
      - "kafka"
    volumes:
      - ../ACIT3855-Processor:/var/acit3855/processor
  audit_log:
    image: audit-log
    ports: 
      - "8110:8110"
    hostname: audit_log
    depends_on:
      - "kafka"
    volumes:
      - ../ACIT3855-AuditLog:/var/acit3855/auditlog
# Names our volume
volumes:
  my-db:
